{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "A wrapper for px-number-formatter-behavior to provide declarative number formatting and display.\n\nRefer to the <a href=\"http://numbrojs.com/format.html\" target=\"_blank\">Numbro.js API</a> for information on the \"format\" strings you can use.\n\n### Usage\n\n    <px-number-formatter\n        value=\"1000\"\n        format=\"0,0\">\n    </px-number-formatter>",
      "summary": "",
      "path": "px-number-formatter.html",
      "properties": [
        {
          "name": "format",
          "type": "string",
          "description": "The format used to generate the output",
          "privacy": "public",
          "sourceRange": {
            "file": "px-number-formatter-behavior.html",
            "start": {
              "line": 38,
              "column": 6
            },
            "end": {
              "line": 40,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "PxNumberFormatter.commonProperties"
        },
        {
          "name": "currency",
          "type": "boolean",
          "description": "Specify whether the value should be formatted as a currency",
          "privacy": "public",
          "sourceRange": {
            "file": "px-number-formatter-behavior.html",
            "start": {
              "line": 45,
              "column": 6
            },
            "end": {
              "line": 48,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false",
          "inheritedFrom": "PxNumberFormatter.commonProperties"
        },
        {
          "name": "culture",
          "type": "string",
          "description": "Provide localization for currency formatting",
          "privacy": "public",
          "sourceRange": {
            "file": "px-number-formatter-behavior.html",
            "start": {
              "line": 53,
              "column": 6
            },
            "end": {
              "line": 56,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"en-US\"",
          "inheritedFrom": "PxNumberFormatter.commonProperties"
        },
        {
          "name": "zeroFormat",
          "type": "string",
          "description": "Provide a new default format for `0` value",
          "privacy": "public",
          "sourceRange": {
            "file": "px-number-formatter-behavior.html",
            "start": {
              "line": 61,
              "column": 6
            },
            "end": {
              "line": 63,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "PxNumberFormatter.commonProperties"
        },
        {
          "name": "value",
          "type": "number",
          "description": "The number value to be formatted",
          "privacy": "public",
          "sourceRange": {
            "file": "px-number-formatter-behavior.html",
            "start": {
              "line": 81,
              "column": 8
            },
            "end": {
              "line": 83,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "PxNumberFormatter.formatter"
        },
        {
          "name": "formattedValue",
          "type": "string",
          "description": "The formatted string representation of the value. Only set if\ntargetElement is not defined",
          "privacy": "public",
          "sourceRange": {
            "file": "px-number-formatter-behavior.html",
            "start": {
              "line": 89,
              "column": 8
            },
            "end": {
              "line": 92,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "inheritedFrom": "PxNumberFormatter.formatter"
        },
        {
          "name": "negative",
          "type": "boolean",
          "description": "Reflect if the value is negative",
          "privacy": "public",
          "sourceRange": {
            "file": "px-number-formatter-behavior.html",
            "start": {
              "line": 97,
              "column": 8
            },
            "end": {
              "line": 101,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          },
          "inheritedFrom": "PxNumberFormatter.formatter"
        },
        {
          "name": "unformat",
          "type": "string",
          "description": "A formatted String to extract a value from",
          "privacy": "public",
          "sourceRange": {
            "file": "px-number-formatter-behavior.html",
            "start": {
              "line": 106,
              "column": 8
            },
            "end": {
              "line": 109,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_unformat\""
            }
          },
          "inheritedFrom": "PxNumberFormatter.formatter"
        },
        {
          "name": "unformattedValue",
          "type": "number",
          "description": "The unformatted Number representation of the unformat value",
          "privacy": "public",
          "sourceRange": {
            "file": "px-number-formatter-behavior.html",
            "start": {
              "line": 114,
              "column": 8
            },
            "end": {
              "line": 117,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "inheritedFrom": "PxNumberFormatter.formatter"
        },
        {
          "name": "defaultFormat",
          "type": "string",
          "description": "Provide a new default format",
          "privacy": "public",
          "sourceRange": {
            "file": "px-number-formatter-behavior.html",
            "start": {
              "line": 122,
              "column": 8
            },
            "end": {
              "line": 125,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_defaultFormat\""
            }
          },
          "inheritedFrom": "PxNumberFormatter.formatter"
        },
        {
          "name": "defaultCurrencyFormat",
          "type": "string",
          "description": "Provide a new default format for currency",
          "privacy": "public",
          "sourceRange": {
            "file": "px-number-formatter-behavior.html",
            "start": {
              "line": 130,
              "column": 8
            },
            "end": {
              "line": 133,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_defaultCurrencyFormat\""
            }
          },
          "inheritedFrom": "PxNumberFormatter.formatter"
        },
        {
          "name": "targetElement",
          "type": "HTMLElement",
          "description": "Target element to assign the formatted value to. If defined\nformattedValue won't be assigned",
          "privacy": "public",
          "sourceRange": {
            "file": "px-number-formatter-behavior.html",
            "start": {
              "line": 138,
              "column": 8
            },
            "end": {
              "line": 140,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "PxNumberFormatter.formatter"
        }
      ],
      "methods": [
        {
          "name": "ready",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "px-number-formatter-behavior.html",
            "start": {
              "line": 149,
              "column": 6
            },
            "end": {
              "line": 152,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "PxNumberFormatter.formatter"
        },
        {
          "name": "_format",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "px-number-formatter-behavior.html",
            "start": {
              "line": 157,
              "column": 6
            },
            "end": {
              "line": 181,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "inheritedFrom": "PxNumberFormatter.formatter"
        },
        {
          "name": "_unformat",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "px-number-formatter-behavior.html",
            "start": {
              "line": 186,
              "column": 6
            },
            "end": {
              "line": 190,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "inheritedFrom": "PxNumberFormatter.formatter"
        },
        {
          "name": "_culture",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "px-number-formatter-behavior.html",
            "start": {
              "line": 195,
              "column": 6
            },
            "end": {
              "line": 200,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "culture"
            }
          ],
          "inheritedFrom": "PxNumberFormatter.formatter"
        },
        {
          "name": "_defaultFormat",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "px-number-formatter-behavior.html",
            "start": {
              "line": 205,
              "column": 6
            },
            "end": {
              "line": 208,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "format"
            }
          ],
          "inheritedFrom": "PxNumberFormatter.formatter"
        },
        {
          "name": "_defaultCurrencyFormat",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "px-number-formatter-behavior.html",
            "start": {
              "line": 213,
              "column": 6
            },
            "end": {
              "line": 216,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "format"
            }
          ],
          "inheritedFrom": "PxNumberFormatter.formatter"
        },
        {
          "name": "_zeroFormat",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "px-number-formatter-behavior.html",
            "start": {
              "line": 221,
              "column": 6
            },
            "end": {
              "line": 226,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "format"
            }
          ],
          "inheritedFrom": "PxNumberFormatter.formatter"
        },
        {
          "name": "attached",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 40,
              "column": 4
            },
            "end": {
              "line": 45,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 31,
          "column": 10
        },
        "end": {
          "line": 47,
          "column": 3
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "attributes": [
        {
          "name": "format",
          "description": "The format used to generate the output",
          "sourceRange": {
            "file": "px-number-formatter-behavior.html",
            "start": {
              "line": 38,
              "column": 6
            },
            "end": {
              "line": 40,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "PxNumberFormatter.commonProperties"
        },
        {
          "name": "currency",
          "description": "Specify whether the value should be formatted as a currency",
          "sourceRange": {
            "file": "px-number-formatter-behavior.html",
            "start": {
              "line": 45,
              "column": 6
            },
            "end": {
              "line": 48,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "PxNumberFormatter.commonProperties"
        },
        {
          "name": "culture",
          "description": "Provide localization for currency formatting",
          "sourceRange": {
            "file": "px-number-formatter-behavior.html",
            "start": {
              "line": 53,
              "column": 6
            },
            "end": {
              "line": 56,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "PxNumberFormatter.commonProperties"
        },
        {
          "name": "zero-format",
          "description": "Provide a new default format for `0` value",
          "sourceRange": {
            "file": "px-number-formatter-behavior.html",
            "start": {
              "line": 61,
              "column": 6
            },
            "end": {
              "line": 63,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "PxNumberFormatter.commonProperties"
        },
        {
          "name": "value",
          "description": "The number value to be formatted",
          "sourceRange": {
            "file": "px-number-formatter-behavior.html",
            "start": {
              "line": 81,
              "column": 8
            },
            "end": {
              "line": 83,
              "column": 9
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "PxNumberFormatter.formatter"
        },
        {
          "name": "formatted-value",
          "description": "The formatted string representation of the value. Only set if\ntargetElement is not defined",
          "sourceRange": {
            "file": "px-number-formatter-behavior.html",
            "start": {
              "line": 89,
              "column": 8
            },
            "end": {
              "line": 92,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "PxNumberFormatter.formatter"
        },
        {
          "name": "negative",
          "description": "Reflect if the value is negative",
          "sourceRange": {
            "file": "px-number-formatter-behavior.html",
            "start": {
              "line": 97,
              "column": 8
            },
            "end": {
              "line": 101,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "PxNumberFormatter.formatter"
        },
        {
          "name": "unformat",
          "description": "A formatted String to extract a value from",
          "sourceRange": {
            "file": "px-number-formatter-behavior.html",
            "start": {
              "line": 106,
              "column": 8
            },
            "end": {
              "line": 109,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "PxNumberFormatter.formatter"
        },
        {
          "name": "unformatted-value",
          "description": "The unformatted Number representation of the unformat value",
          "sourceRange": {
            "file": "px-number-formatter-behavior.html",
            "start": {
              "line": 114,
              "column": 8
            },
            "end": {
              "line": 117,
              "column": 9
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "PxNumberFormatter.formatter"
        },
        {
          "name": "default-format",
          "description": "Provide a new default format",
          "sourceRange": {
            "file": "px-number-formatter-behavior.html",
            "start": {
              "line": 122,
              "column": 8
            },
            "end": {
              "line": 125,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "PxNumberFormatter.formatter"
        },
        {
          "name": "default-currency-format",
          "description": "Provide a new default format for currency",
          "sourceRange": {
            "file": "px-number-formatter-behavior.html",
            "start": {
              "line": 130,
              "column": 8
            },
            "end": {
              "line": 133,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "PxNumberFormatter.formatter"
        },
        {
          "name": "target-element",
          "description": "Target element to assign the formatted value to. If defined\nformattedValue won't be assigned",
          "sourceRange": {
            "file": "px-number-formatter-behavior.html",
            "start": {
              "line": 138,
              "column": 8
            },
            "end": {
              "line": 140,
              "column": 9
            }
          },
          "metadata": {},
          "type": "HTMLElement",
          "inheritedFrom": "PxNumberFormatter.formatter"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "formatted-value-changed",
          "description": "Fired when the `formattedValue` property changes.",
          "metadata": {},
          "inheritedFrom": "PxNumberFormatter.formatter"
        },
        {
          "type": "CustomEvent",
          "name": "unformatted-value-changed",
          "description": "Fired when the `unformattedValue` property changes.",
          "metadata": {},
          "inheritedFrom": "PxNumberFormatter.formatter"
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "px-number-formatter"
    }
  ],
  "metadata": {
    "polymer": {
      "behaviors": [
        {
          "description": "      Name:\n      PxNumberFormatter.commonProperties\n\n      Description:\n      Polymer behavior that provides properties devs might want to pass down.\n\n      ",
          "summary": "",
          "path": "px-number-formatter-behavior.html",
          "properties": [
            {
              "name": "format",
              "type": "string",
              "description": "The format used to generate the output",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 38,
                  "column": 6
                },
                "end": {
                  "line": 40,
                  "column": 7
                }
              },
              "metadata": {
                "polymer": {}
              }
            },
            {
              "name": "currency",
              "type": "boolean",
              "description": "Specify whether the value should be formatted as a currency",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 45,
                  "column": 6
                },
                "end": {
                  "line": 48,
                  "column": 7
                }
              },
              "metadata": {
                "polymer": {}
              },
              "defaultValue": "false"
            },
            {
              "name": "culture",
              "type": "string",
              "description": "Provide localization for currency formatting",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 53,
                  "column": 6
                },
                "end": {
                  "line": 56,
                  "column": 7
                }
              },
              "metadata": {
                "polymer": {}
              },
              "defaultValue": "\"en-US\""
            },
            {
              "name": "zeroFormat",
              "type": "string",
              "description": "Provide a new default format for `0` value",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 61,
                  "column": 6
                },
                "end": {
                  "line": 63,
                  "column": 7
                }
              },
              "metadata": {
                "polymer": {}
              }
            }
          ],
          "methods": [],
          "staticMethods": [],
          "demos": [],
          "metadata": {},
          "sourceRange": {
            "start": {
              "line": 31,
              "column": 2
            },
            "end": {
              "line": 65,
              "column": 4
            }
          },
          "privacy": "public",
          "name": "PxNumberFormatter.commonProperties",
          "attributes": [
            {
              "name": "format",
              "description": "The format used to generate the output",
              "sourceRange": {
                "start": {
                  "line": 38,
                  "column": 6
                },
                "end": {
                  "line": 40,
                  "column": 7
                }
              },
              "metadata": {},
              "type": "string"
            },
            {
              "name": "currency",
              "description": "Specify whether the value should be formatted as a currency",
              "sourceRange": {
                "start": {
                  "line": 45,
                  "column": 6
                },
                "end": {
                  "line": 48,
                  "column": 7
                }
              },
              "metadata": {},
              "type": "boolean"
            },
            {
              "name": "culture",
              "description": "Provide localization for currency formatting",
              "sourceRange": {
                "start": {
                  "line": 53,
                  "column": 6
                },
                "end": {
                  "line": 56,
                  "column": 7
                }
              },
              "metadata": {},
              "type": "string"
            },
            {
              "name": "zero-format",
              "description": "Provide a new default format for `0` value",
              "sourceRange": {
                "start": {
                  "line": 61,
                  "column": 6
                },
                "end": {
                  "line": 63,
                  "column": 7
                }
              },
              "metadata": {},
              "type": "string"
            }
          ],
          "events": [],
          "styling": {
            "cssVariables": [],
            "selectors": []
          },
          "slots": []
        },
        {
          "description": "      Name:\n      PxNumberFormatter.formatter\n\n      Description:\n      Polymer behavior that wraps the [numbro.js](http://numbrojs.com/) library. Provides Numbrojs number formatting properties and methods.\n\n      ",
          "summary": "",
          "path": "px-number-formatter-behavior.html",
          "properties": [
            {
              "name": "format",
              "type": "string",
              "description": "The format used to generate the output",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 38,
                  "column": 6
                },
                "end": {
                  "line": 40,
                  "column": 7
                }
              },
              "metadata": {
                "polymer": {}
              },
              "inheritedFrom": "PxNumberFormatter.commonProperties"
            },
            {
              "name": "currency",
              "type": "boolean",
              "description": "Specify whether the value should be formatted as a currency",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 45,
                  "column": 6
                },
                "end": {
                  "line": 48,
                  "column": 7
                }
              },
              "metadata": {
                "polymer": {}
              },
              "defaultValue": "false",
              "inheritedFrom": "PxNumberFormatter.commonProperties"
            },
            {
              "name": "culture",
              "type": "string",
              "description": "Provide localization for currency formatting",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 53,
                  "column": 6
                },
                "end": {
                  "line": 56,
                  "column": 7
                }
              },
              "metadata": {
                "polymer": {}
              },
              "defaultValue": "\"en-US\"",
              "inheritedFrom": "PxNumberFormatter.commonProperties"
            },
            {
              "name": "zeroFormat",
              "type": "string",
              "description": "Provide a new default format for `0` value",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 61,
                  "column": 6
                },
                "end": {
                  "line": 63,
                  "column": 7
                }
              },
              "metadata": {
                "polymer": {}
              },
              "inheritedFrom": "PxNumberFormatter.commonProperties"
            },
            {
              "name": "value",
              "type": "number",
              "description": "The number value to be formatted",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 81,
                  "column": 8
                },
                "end": {
                  "line": 83,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {}
              }
            },
            {
              "name": "formattedValue",
              "type": "string",
              "description": "The formatted string representation of the value. Only set if\ntargetElement is not defined",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 89,
                  "column": 8
                },
                "end": {
                  "line": 92,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {
                  "notify": true
                }
              }
            },
            {
              "name": "negative",
              "type": "boolean",
              "description": "Reflect if the value is negative",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 97,
                  "column": 8
                },
                "end": {
                  "line": 101,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {
                  "readOnly": true
                }
              }
            },
            {
              "name": "unformat",
              "type": "string",
              "description": "A formatted String to extract a value from",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 106,
                  "column": 8
                },
                "end": {
                  "line": 109,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {
                  "observer": "\"_unformat\""
                }
              }
            },
            {
              "name": "unformattedValue",
              "type": "number",
              "description": "The unformatted Number representation of the unformat value",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 114,
                  "column": 8
                },
                "end": {
                  "line": 117,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {
                  "notify": true
                }
              }
            },
            {
              "name": "defaultFormat",
              "type": "string",
              "description": "Provide a new default format",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 122,
                  "column": 8
                },
                "end": {
                  "line": 125,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {
                  "observer": "\"_defaultFormat\""
                }
              }
            },
            {
              "name": "defaultCurrencyFormat",
              "type": "string",
              "description": "Provide a new default format for currency",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 130,
                  "column": 8
                },
                "end": {
                  "line": 133,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {
                  "observer": "\"_defaultCurrencyFormat\""
                }
              }
            },
            {
              "name": "targetElement",
              "type": "HTMLElement",
              "description": "Target element to assign the formatted value to. If defined\nformattedValue won't be assigned",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 138,
                  "column": 8
                },
                "end": {
                  "line": 140,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {}
              }
            }
          ],
          "methods": [
            {
              "name": "ready",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 149,
                  "column": 6
                },
                "end": {
                  "line": 152,
                  "column": 7
                }
              },
              "metadata": {},
              "params": []
            },
            {
              "name": "_format",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 157,
                  "column": 6
                },
                "end": {
                  "line": 181,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "value"
                }
              ]
            },
            {
              "name": "_unformat",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 186,
                  "column": 6
                },
                "end": {
                  "line": 190,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "value"
                }
              ]
            },
            {
              "name": "_culture",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 195,
                  "column": 6
                },
                "end": {
                  "line": 200,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "culture"
                }
              ]
            },
            {
              "name": "_defaultFormat",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 205,
                  "column": 6
                },
                "end": {
                  "line": 208,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "format"
                }
              ]
            },
            {
              "name": "_defaultCurrencyFormat",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 213,
                  "column": 6
                },
                "end": {
                  "line": 216,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "format"
                }
              ]
            },
            {
              "name": "_zeroFormat",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 221,
                  "column": 6
                },
                "end": {
                  "line": 226,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "format"
                }
              ]
            }
          ],
          "staticMethods": [],
          "demos": [],
          "metadata": {},
          "sourceRange": {
            "start": {
              "line": 75,
              "column": 2
            },
            "end": {
              "line": 228,
              "column": 41
            }
          },
          "privacy": "public",
          "name": "PxNumberFormatter.formatter",
          "attributes": [
            {
              "name": "format",
              "description": "The format used to generate the output",
              "sourceRange": {
                "start": {
                  "line": 38,
                  "column": 6
                },
                "end": {
                  "line": 40,
                  "column": 7
                }
              },
              "metadata": {},
              "type": "string",
              "inheritedFrom": "PxNumberFormatter.commonProperties"
            },
            {
              "name": "currency",
              "description": "Specify whether the value should be formatted as a currency",
              "sourceRange": {
                "start": {
                  "line": 45,
                  "column": 6
                },
                "end": {
                  "line": 48,
                  "column": 7
                }
              },
              "metadata": {},
              "type": "boolean",
              "inheritedFrom": "PxNumberFormatter.commonProperties"
            },
            {
              "name": "culture",
              "description": "Provide localization for currency formatting",
              "sourceRange": {
                "start": {
                  "line": 53,
                  "column": 6
                },
                "end": {
                  "line": 56,
                  "column": 7
                }
              },
              "metadata": {},
              "type": "string",
              "inheritedFrom": "PxNumberFormatter.commonProperties"
            },
            {
              "name": "zero-format",
              "description": "Provide a new default format for `0` value",
              "sourceRange": {
                "start": {
                  "line": 61,
                  "column": 6
                },
                "end": {
                  "line": 63,
                  "column": 7
                }
              },
              "metadata": {},
              "type": "string",
              "inheritedFrom": "PxNumberFormatter.commonProperties"
            },
            {
              "name": "value",
              "description": "The number value to be formatted",
              "sourceRange": {
                "start": {
                  "line": 81,
                  "column": 8
                },
                "end": {
                  "line": 83,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "number"
            },
            {
              "name": "formatted-value",
              "description": "The formatted string representation of the value. Only set if\ntargetElement is not defined",
              "sourceRange": {
                "start": {
                  "line": 89,
                  "column": 8
                },
                "end": {
                  "line": 92,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "string"
            },
            {
              "name": "negative",
              "description": "Reflect if the value is negative",
              "sourceRange": {
                "start": {
                  "line": 97,
                  "column": 8
                },
                "end": {
                  "line": 101,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "boolean"
            },
            {
              "name": "unformat",
              "description": "A formatted String to extract a value from",
              "sourceRange": {
                "start": {
                  "line": 106,
                  "column": 8
                },
                "end": {
                  "line": 109,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "string"
            },
            {
              "name": "unformatted-value",
              "description": "The unformatted Number representation of the unformat value",
              "sourceRange": {
                "start": {
                  "line": 114,
                  "column": 8
                },
                "end": {
                  "line": 117,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "number"
            },
            {
              "name": "default-format",
              "description": "Provide a new default format",
              "sourceRange": {
                "start": {
                  "line": 122,
                  "column": 8
                },
                "end": {
                  "line": 125,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "string"
            },
            {
              "name": "default-currency-format",
              "description": "Provide a new default format for currency",
              "sourceRange": {
                "start": {
                  "line": 130,
                  "column": 8
                },
                "end": {
                  "line": 133,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "string"
            },
            {
              "name": "target-element",
              "description": "Target element to assign the formatted value to. If defined\nformattedValue won't be assigned",
              "sourceRange": {
                "start": {
                  "line": 138,
                  "column": 8
                },
                "end": {
                  "line": 140,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "HTMLElement"
            }
          ],
          "events": [
            {
              "type": "CustomEvent",
              "name": "formatted-value-changed",
              "description": "Fired when the `formattedValue` property changes.",
              "metadata": {}
            },
            {
              "type": "CustomEvent",
              "name": "unformatted-value-changed",
              "description": "Fired when the `unformattedValue` property changes.",
              "metadata": {}
            }
          ],
          "styling": {
            "cssVariables": [],
            "selectors": []
          },
          "slots": []
        }
      ]
    }
  }
}
