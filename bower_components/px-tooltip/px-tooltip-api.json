{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "Tooltips can be positioned above, below, to the left, or to the right of the target.\nA Smart Orientation option is included that will attempt to automatically choose a placement based on the real estate available â€“ this attempts to prevent the tooltip from going off the screen.\n\n**Note:** tooltips are not recommended for mobile or tablet applications since the hover affordance is inconsistent across devices and platforms (3D touch, tap-and-hold, proximity sensors, etc). See [px-popover](https://www.predix-ui.com/#/components/px-popover/), which is invoked on tap/click instead.\n\n### Usage\n\n    <div id=\"hoverDivTop\" class=\"hover-tooltip\">Hover for tooltip<br/><span>(top, 5 sec delay)</span></div>\n    <px-tooltip\n        for=\"hoverDivTop\"\n        orientation=\"top\"\n        tooltip-message=\"Top tooltip\">\n    </px-tooltip>\n\n### Styling\nThe following custom properties are available for styling.\n\nCustom property | Description\n:----------------|:-------------\n`--px-tooltip-text-color` | Text color for the tooltip\n`--px-tooltip-background-color` | Background color for the tooltip\n`--px-tooltip-border-color` | Border color for the tooltip\n`--px-tooltip-shadow-color` | Box shadow color for the tooltip\n`--px-tooltip-max-width` | Max width of the tooltip",
      "summary": "",
      "path": "px-tooltip.html",
      "properties": [
        {
          "name": "_parentResizable",
          "type": "Object",
          "description": "The closest ancestor element that implements `IronResizableBehavior`.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-resizable-behavior/iron-resizable-behavior.html",
            "start": {
              "line": 36,
              "column": 6
            },
            "end": {
              "line": 39,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_parentResizableChanged\""
            }
          },
          "inheritedFrom": "Polymer.IronResizableBehavior"
        },
        {
          "name": "_notifyingDescendant",
          "type": "boolean",
          "description": "True if this element is currently notifying its descendant elements of\nresize.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-resizable-behavior/iron-resizable-behavior.html",
            "start": {
              "line": 45,
              "column": 6
            },
            "end": {
              "line": 48,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false",
          "inheritedFrom": "Polymer.IronResizableBehavior"
        },
        {
          "name": "_values",
          "type": "Object",
          "description": "Private Properties, used in internal view logic.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 61,
              "column": 4
            },
            "end": {
              "line": 68,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "for",
          "type": "Object",
          "description": "Either the id of the element that the tooltip is anchored to or the element itself.\n\nIf an ID is passed, this element must be a sibling of the tooltip.\nIf an element, location in the dom does not matter.\n\n(Optional)  If not provided, the px-tooltip will be attached to its parent element.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 105,
              "column": 6
            },
            "end": {
              "line": 110,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_onFor\""
            }
          },
          "defaultValue": "\"\""
        },
        {
          "name": "delay",
          "type": "number",
          "description": "The amount of time in miliseconds before the tooltip should appear when the\ntarget element is hovered over.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 115,
              "column": 6
            },
            "end": {
              "line": 119,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "500"
        },
        {
          "name": "orientation",
          "type": "string",
          "description": "The direction that the tooltip is displayed relative to the\n'for' element.\n- 'auto' calculated at render time or resize\n- 'left' to the left of the 'for' element\n- 'right' to the right of the 'for' element\n- 'top' above the 'for' element\n- 'bottom' below the 'for' element",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 129,
              "column": 6
            },
            "end": {
              "line": 132,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"auto\""
        },
        {
          "name": "tooltipMessage",
          "type": "string",
          "description": "The string to be displayed in the tooltip message.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 136,
              "column": 6
            },
            "end": {
              "line": 139,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"\""
        },
        {
          "name": "opened",
          "type": "boolean",
          "description": "This boolean can be used to REQUEST an open/close action to the tooltip\nBecause the show/hide mechanism are asynchronous this won't represent\nthe actual presence of the tooltip on the screen, this is represented\nby the `visible` property",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 147,
              "column": 6
            },
            "end": {
              "line": 151,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "visible",
          "type": "boolean",
          "description": "Whether the tooltip is currently shown on screen",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 157,
              "column": 6
            },
            "end": {
              "line": 162,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "ignoreTargetEvents",
          "type": "boolean",
          "description": "If true the tooltip will ignore the targets events it usually listens\nto: mouseup/down, mouseleave/enter... Use this to more precisely\nmanually control the showing/hiding of the tooltip",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 168,
              "column": 6
            },
            "end": {
              "line": 171,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "openRequested",
          "type": "boolean",
          "description": "True when opened has been requested (i.e set to true) but the tooltip\nhasn't been made visible yet. Not needed in most cases but might be\nhelpful to catch edge states (i.e reclosing the tooltip after a show\nrequest has been issued but the tooltip isn't visible yet)",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 178,
              "column": 8
            },
            "end": {
              "line": 183,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "smartOrientation",
          "type": "boolean",
          "description": "If smartOrientation is turned on then the tooltip will override the\ndefault orientation to try to better fit on the page. Smart Orientation\nwill be chosen in a clockwise manner. (Example: for a tooltip with\n\"right\" orientation it will be below if tooltip will go off right side\nof the screen, but left if it goes off right *and* bottom side of the\nscreen).\nNote: this feature is only enabled for the \"top\" or \"bottom\" orientations",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 193,
              "column": 6
            },
            "end": {
              "line": 196,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "_cancel",
          "type": "boolean",
          "description": "Activates if the user hovers OFF the target element.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 200,
              "column": 6
            },
            "end": {
              "line": 203,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "_tooltipParent",
          "type": "Object",
          "description": "An object referring to the tooltip's parent element.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 207,
              "column": 6
            },
            "end": {
              "line": 210,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "{}"
        },
        {
          "name": "followMouse",
          "type": "boolean",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 211,
              "column": 6
            },
            "end": {
              "line": 214,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "mouseCoords",
          "type": "Array",
          "description": "If using followMouse the mouse coordinates to display the tooltip at, *in viewport pixels*",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 218,
              "column": 6
            },
            "end": {
              "line": 221,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "[-9999,-9999]"
        },
        {
          "name": "_watchDogEnabled",
          "type": "boolean",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 222,
              "column": 6
            },
            "end": {
              "line": 225,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "_firstAttached",
          "type": "boolean",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 226,
              "column": 6
            },
            "end": {
              "line": 229,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "true"
        },
        {
          "name": "watchDogTimeout",
          "type": "number",
          "description": "When shown the tooltip uses a watchdog to ensure it is removed\nif the parent is removed. The watchdog runs every watchDogTimeout ms\nIf you see a performance degradation when showing tooltip you can\nincrease the watchdog timeout",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 236,
              "column": 6
            },
            "end": {
              "line": 239,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "250"
        },
        {
          "name": "_currTarget",
          "type": "Object",
          "description": "The current target that triggered _show. Useful when target is an array",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 243,
              "column": 6
            },
            "end": {
              "line": 245,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "_internalDetaching",
          "type": "boolean",
          "description": "True when detached is caused by px-tooltip code",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 249,
              "column": 6
            },
            "end": {
              "line": 252,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "_margin",
          "type": "Object",
          "description": "Used internally for calculations, includes carat + spacing from target (5+5)",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 256,
              "column": 6
            },
            "end": {
              "line": 266,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "{\"top\":10,\"bottom\":10,\"left\":10,\"right\":10}"
        },
        {
          "name": "_tooltipPos",
          "type": "string",
          "description": "Current position of the carat",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 270,
              "column": 6
            },
            "end": {
              "line": 273,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"right\""
        }
      ],
      "methods": [
        {
          "name": "created",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-resizable-behavior/iron-resizable-behavior.html",
            "start": {
              "line": 55,
              "column": 4
            },
            "end": {
              "line": 60,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronResizableBehavior"
        },
        {
          "name": "attached",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 283,
              "column": 4
            },
            "end": {
              "line": 301,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "detached",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 302,
              "column": 4
            },
            "end": {
              "line": 322,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "notifyResize",
          "description": "Can be called to manually notify a resizable and its descendant\nresizables of a resize change.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/iron-resizable-behavior/iron-resizable-behavior.html",
            "start": {
              "line": 80,
              "column": 4
            },
            "end": {
              "line": 92,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronResizableBehavior"
        },
        {
          "name": "assignParentResizable",
          "description": "Used to assign the closest resizable ancestor to this resizable\nif the ancestor detects a request for notifications.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/iron-resizable-behavior/iron-resizable-behavior.html",
            "start": {
              "line": 98,
              "column": 4
            },
            "end": {
              "line": 100,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "parentResizable"
            }
          ],
          "inheritedFrom": "Polymer.IronResizableBehavior"
        },
        {
          "name": "stopResizeNotificationsFor",
          "description": "Used to remove a resizable descendant from the list of descendants\nthat should be notified of a resize change.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/iron-resizable-behavior/iron-resizable-behavior.html",
            "start": {
              "line": 106,
              "column": 4
            },
            "end": {
              "line": 113,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "target"
            }
          ],
          "inheritedFrom": "Polymer.IronResizableBehavior"
        },
        {
          "name": "resizerShouldNotify",
          "description": "This method can be overridden to filter nested elements that should or\nshould not be notified by the current element. Return true if an element\nshould be notified, or false if it should not be notified.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/iron-resizable-behavior/iron-resizable-behavior.html",
            "start": {
              "line": 124,
              "column": 4
            },
            "end": {
              "line": 124,
              "column": 59
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "element",
              "type": "HTMLElement",
              "description": "A candidate descendant element that\nimplements `IronResizableBehavior`."
            }
          ],
          "return": {
            "type": "boolean",
            "desc": "True if the `element` should be notified of resize."
          },
          "inheritedFrom": "Polymer.IronResizableBehavior"
        },
        {
          "name": "_onDescendantIronResize",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-resizable-behavior/iron-resizable-behavior.html",
            "start": {
              "line": 126,
              "column": 4
            },
            "end": {
              "line": 138,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event"
            }
          ],
          "inheritedFrom": "Polymer.IronResizableBehavior"
        },
        {
          "name": "_fireResize",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-resizable-behavior/iron-resizable-behavior.html",
            "start": {
              "line": 140,
              "column": 4
            },
            "end": {
              "line": 145,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronResizableBehavior"
        },
        {
          "name": "_onIronRequestResizeNotifications",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-resizable-behavior/iron-resizable-behavior.html",
            "start": {
              "line": 147,
              "column": 4
            },
            "end": {
              "line": 162,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event"
            }
          ],
          "inheritedFrom": "Polymer.IronResizableBehavior"
        },
        {
          "name": "_parentResizableChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-resizable-behavior/iron-resizable-behavior.html",
            "start": {
              "line": 164,
              "column": 4
            },
            "end": {
              "line": 168,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "parentResizable"
            }
          ],
          "inheritedFrom": "Polymer.IronResizableBehavior"
        },
        {
          "name": "_notifyDescendant",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-resizable-behavior/iron-resizable-behavior.html",
            "start": {
              "line": 170,
              "column": 4
            },
            "end": {
              "line": 181,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "descendant"
            }
          ],
          "inheritedFrom": "Polymer.IronResizableBehavior"
        },
        {
          "name": "_requestResizeNotifications",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-resizable-behavior/iron-resizable-behavior.html",
            "start": {
              "line": 183,
              "column": 4
            },
            "end": {
              "line": 211,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronResizableBehavior"
        },
        {
          "name": "listenEvents",
          "description": "Starts listening to all mouse events (on the target(s)) we are\ninterested in: mouseenter, mouseup, mouseleave, mousedown",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 328,
              "column": 4
            },
            "end": {
              "line": 344,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "unlistenEvents",
          "description": "Stops listening to all mouse events (on the target(s)) we were interested\nin: mouseenter, mouseup, mouseleave, mousedown",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 350,
              "column": 4
            },
            "end": {
              "line": 367,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_setOpenedTrue",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 369,
              "column": 4
            },
            "end": {
              "line": 371,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_setOpenedFalse",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 373,
              "column": 4
            },
            "end": {
              "line": 375,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_openedChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 377,
              "column": 4
            },
            "end": {
              "line": 385,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_onMouseMove",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 387,
              "column": 4
            },
            "end": {
              "line": 407,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_onFor",
          "description": "This function fires on a change of the 'for' property,\ncalls _getTarget and sets the target.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 412,
              "column": 4
            },
            "end": {
              "line": 419,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_onIronResize",
          "description": "Make sure the tooltip is positioned properly if currently showing.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 423,
              "column": 4
            },
            "end": {
              "line": 437,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_getTarget",
          "description": "This function sets the target on the component (the item hovered over)",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 441,
              "column": 4
            },
            "end": {
              "line": 467,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_show",
          "description": "This function sets a timeout with the delay value, and if\nthis.cancel has not been called, moves the tooltip to the DOM root,\nand sets the tooltip as visible.\nDon't call this manually but set `opened` instead",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 474,
              "column": 4
            },
            "end": {
              "line": 505,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "evt"
            }
          ]
        },
        {
          "name": "_processShow",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 506,
              "column": 4
            },
            "end": {
              "line": 521,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_hide",
          "description": "Hide the tooltip, clear the timer, and move the tooltip back to whence\nit came.\nDon't call this manually but set `opened` instead",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 527,
              "column": 4
            },
            "end": {
              "line": 556,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "setPosition",
          "description": "This function calls the appropriate positioning function,\naccording to the orientation specified, target and tooltip content",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 561,
              "column": 4
            },
            "end": {
              "line": 587,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_autoPosition",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 594,
              "column": 4
            },
            "end": {
              "line": 598,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_fitOnLeft",
          "description": "This function checks if the tooltip can be fitted on the left.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 602,
              "column": 4
            },
            "end": {
              "line": 619,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_fitOnRight",
          "description": "This function checks if the tooltip can be fitted on the right.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 623,
              "column": 4
            },
            "end": {
              "line": 640,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_fitOnTop",
          "description": "This function checks if the tooltip can be fitted on top.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 644,
              "column": 4
            },
            "end": {
              "line": 661,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_fitBelow",
          "description": "This function checks if the tooltip can be fitted below.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 665,
              "column": 4
            },
            "end": {
              "line": 682,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_findValidSmartOrientation",
          "description": "This function tries the find the appropriate orientation for the current\ntooltip and orientation passed. it will try every orientation clockwise\nuntil it finds one that fits, and return the startingOrientation if none fit.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 688,
              "column": 4
            },
            "end": {
              "line": 725,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "startingOrientation"
            }
          ]
        },
        {
          "name": "_orientationFit",
          "description": "This function checks if the tooltip will fit for the given orientation.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 729,
              "column": 4
            },
            "end": {
              "line": 744,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "orientation"
            }
          ]
        },
        {
          "name": "_doPosition",
          "description": "This function positions the tooltip on left/right/top/bottom irrespective\nof everything else, i.e smart orientation.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 749,
              "column": 4
            },
            "end": {
              "line": 764,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "orientation"
            }
          ]
        },
        {
          "name": "_positionTop",
          "description": "This function sets the carat and tooltip position on top.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 768,
              "column": 4
            },
            "end": {
              "line": 781,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_positionBottom",
          "description": "This function sets the carat and tooltip position on bottom.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 785,
              "column": 4
            },
            "end": {
              "line": 797,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_positionLeft",
          "description": "This function sets the carat and tooltip position on left.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 801,
              "column": 4
            },
            "end": {
              "line": 817,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_positionRight",
          "description": "This function sets the carat and tooltip position on right.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 821,
              "column": 4
            },
            "end": {
              "line": 837,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_getTargetPositionTop",
          "description": "This function returns the target position on top",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 842,
              "column": 4
            },
            "end": {
              "line": 844,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_getTargetPositionBottom",
          "description": "This function returns the target position on bottom",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 848,
              "column": 4
            },
            "end": {
              "line": 850,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_getTargetPositionLeft",
          "description": "This function returns the target position on left",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 854,
              "column": 4
            },
            "end": {
              "line": 856,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "smartOrientation"
            }
          ]
        },
        {
          "name": "_getTargetPositionRight",
          "description": "This function returns the target position on right",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 860,
              "column": 4
            },
            "end": {
              "line": 862,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_getTargetPositionCenterOfTopBottom",
          "description": "This function returns the target position on the center of\neither the top or bottom.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 867,
              "column": 4
            },
            "end": {
              "line": 869,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_getTargetPositionCenterOfLeftRight",
          "description": "This function returns the target position on the center of\neither the left or right.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 874,
              "column": 4
            },
            "end": {
              "line": 876,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "smartOrientation"
            }
          ]
        },
        {
          "name": "_getTargetPosition",
          "description": "This function calculates the target position, with passed\nparameters",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 881,
              "column": 4
            },
            "end": {
              "line": 885,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "topOrLeft"
            },
            {
              "name": "pageXOrYOffset"
            }
          ]
        },
        {
          "name": "_isWithinDom",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 887,
              "column": 4
            },
            "end": {
              "line": 902,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node"
            }
          ]
        },
        {
          "name": "_watchDog",
          "description": "Watchdog when the tooltip is showing so it can be removed\nif the parent is removed. Returns false when the tooltip is removed.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 907,
              "column": 4
            },
            "end": {
              "line": 932,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_getClass",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 934,
              "column": 4
            },
            "end": {
              "line": 944,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_ignoreTargetEventsChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 946,
              "column": 4
            },
            "end": {
              "line": 954,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 49,
          "column": 10
        },
        "end": {
          "line": 955,
          "column": 3
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "attributes": [
        {
          "name": "for",
          "description": "Either the id of the element that the tooltip is anchored to or the element itself.\n\nIf an ID is passed, this element must be a sibling of the tooltip.\nIf an element, location in the dom does not matter.\n\n(Optional)  If not provided, the px-tooltip will be attached to its parent element.",
          "sourceRange": {
            "start": {
              "line": 105,
              "column": 6
            },
            "end": {
              "line": 110,
              "column": 7
            }
          },
          "metadata": {},
          "type": "Object"
        },
        {
          "name": "delay",
          "description": "The amount of time in miliseconds before the tooltip should appear when the\ntarget element is hovered over.",
          "sourceRange": {
            "start": {
              "line": 115,
              "column": 6
            },
            "end": {
              "line": 119,
              "column": 7
            }
          },
          "metadata": {},
          "type": "number"
        },
        {
          "name": "orientation",
          "description": "The direction that the tooltip is displayed relative to the\n'for' element.\n- 'auto' calculated at render time or resize\n- 'left' to the left of the 'for' element\n- 'right' to the right of the 'for' element\n- 'top' above the 'for' element\n- 'bottom' below the 'for' element",
          "sourceRange": {
            "start": {
              "line": 129,
              "column": 6
            },
            "end": {
              "line": 132,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "tooltip-message",
          "description": "The string to be displayed in the tooltip message.",
          "sourceRange": {
            "start": {
              "line": 136,
              "column": 6
            },
            "end": {
              "line": 139,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "opened",
          "description": "This boolean can be used to REQUEST an open/close action to the tooltip\nBecause the show/hide mechanism are asynchronous this won't represent\nthe actual presence of the tooltip on the screen, this is represented\nby the `visible` property",
          "sourceRange": {
            "start": {
              "line": 147,
              "column": 6
            },
            "end": {
              "line": 151,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "visible",
          "description": "Whether the tooltip is currently shown on screen",
          "sourceRange": {
            "start": {
              "line": 157,
              "column": 6
            },
            "end": {
              "line": 162,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "ignore-target-events",
          "description": "If true the tooltip will ignore the targets events it usually listens\nto: mouseup/down, mouseleave/enter... Use this to more precisely\nmanually control the showing/hiding of the tooltip",
          "sourceRange": {
            "start": {
              "line": 168,
              "column": 6
            },
            "end": {
              "line": 171,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "open-requested",
          "description": "True when opened has been requested (i.e set to true) but the tooltip\nhasn't been made visible yet. Not needed in most cases but might be\nhelpful to catch edge states (i.e reclosing the tooltip after a show\nrequest has been issued but the tooltip isn't visible yet)",
          "sourceRange": {
            "start": {
              "line": 178,
              "column": 8
            },
            "end": {
              "line": 183,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "smart-orientation",
          "description": "If smartOrientation is turned on then the tooltip will override the\ndefault orientation to try to better fit on the page. Smart Orientation\nwill be chosen in a clockwise manner. (Example: for a tooltip with\n\"right\" orientation it will be below if tooltip will go off right side\nof the screen, but left if it goes off right *and* bottom side of the\nscreen).\nNote: this feature is only enabled for the \"top\" or \"bottom\" orientations",
          "sourceRange": {
            "start": {
              "line": 193,
              "column": 6
            },
            "end": {
              "line": 196,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "follow-mouse",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 211,
              "column": 6
            },
            "end": {
              "line": 214,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "mouse-coords",
          "description": "If using followMouse the mouse coordinates to display the tooltip at, *in viewport pixels*",
          "sourceRange": {
            "start": {
              "line": 218,
              "column": 6
            },
            "end": {
              "line": 221,
              "column": 7
            }
          },
          "metadata": {},
          "type": "Array"
        },
        {
          "name": "watch-dog-timeout",
          "description": "When shown the tooltip uses a watchdog to ensure it is removed\nif the parent is removed. The watchdog runs every watchDogTimeout ms\nIf you see a performance degradation when showing tooltip you can\nincrease the watchdog timeout",
          "sourceRange": {
            "start": {
              "line": 236,
              "column": 6
            },
            "end": {
              "line": 239,
              "column": 7
            }
          },
          "metadata": {},
          "type": "number"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "px-tooltip-hide",
          "description": "px-tooltip-hide",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "px-tooltip-request-hide",
          "description": "px-tooltip-request-hide",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "px-tooltip-request-show",
          "description": "px-tooltip-request-show",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "px-tooltip-show",
          "description": "px-tooltip-show",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "for-changed",
          "description": "Fired when the `for` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "opened-changed",
          "description": "Fired when the `opened` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "visible-changed",
          "description": "Fired when the `visible` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "open-requested-changed",
          "description": "Fired when the `openRequested` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "px-tooltip"
    }
  ]
}
